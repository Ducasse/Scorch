'From Pharo6.0 of 13 May 2016 [Latest update: #60497] on 23 November 2017 at 4:04:23.66562 pm'!Object subclass: #SistaV1Doc	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SistaV1Doc'!!SistaV1Doc methodsFor: 'accessing' stamp: 'ClementBera 10/19/2017 17:09'!genDocComment2	|  s |	s := '' writeStream.	(self read at: 'mapped') do: [ :each |		((each at: 'num') // 1000 * 1000 = (each at: 'num') ) ifTrue: [ s cr ].		s << (each at: 'num').		s tab.		s << (each at: 'name').		s cr.		(each at: 'argGuarantees') 			do: [ :e | e isEmpty ifTrue: [s << 'Anything'] ifFalse: [s << e] ]			separatedBy: [ s << ', ' ].		 each at: 'retGuarantee'			ifPresent: [ :elem | s << ' => ' << elem ].		(each at: 'comments') isEmpty ifFalse: [  			s << ' (' << (each at: 'comments') << ')'].		s cr.		 ].	^ s contents! !!SistaV1Doc methodsFor: 'accessing' stamp: 'ClementBera 10/19/2017 17:08'!read	^ ((Smalltalk at: #NeoJSONReader) on: 'SpecSistaUnsafeOp.txt' asFileReference readStream) next! !!SistaV1Doc methodsFor: 'accessing' stamp: 'ClementBera 11/20/2017 15:22'!genSelectors2	|  selectors |	selectors := OrderedCollection new.	(self read at: 'mapped') do: [ :each |		selectors add: (each at: 'name');			add: (each at: 'num') ].	^ selectors asArray! !!SistaV1Doc methodsFor: 'accessing' stamp: 'ClementBera 10/19/2017 17:09'!genDocComment	|  s |	s := '' writeStream.	(self read at: 'unmapped') do: [ :each |		((each at: 'num') // 1000 * 1000 = (each at: 'num') ) ifTrue: [ s cr ].		s << (each at: 'num').		s tab.		s << (each at: 'name').		s cr.		(each at: 'argGuarantees') 			do: [ :e | e isEmpty ifTrue: [s << 'Anything'] ifFalse: [s << e] ]			separatedBy: [ s << ', ' ].		 each at: 'retGuarantee'			ifPresent: [ :elem | s << ' => ' << elem ].		(each at: 'comments') isEmpty ifFalse: [  			s << ' (' << (each at: 'comments') << ')'].		s cr.		 ].	^ s contents! !!SistaV1Doc methodsFor: 'accessing' stamp: 'ClementBera 11/20/2017 15:21'!genSelectors	|  selectors |	selectors := OrderedCollection new.	(self read at: 'unmapped') do: [ :each |		selectors add: (each at: 'name');				add: (each at: 'num') ].	^ selectors asArray! !!SistaV1Doc methodsFor: 'accessing' stamp: 'ClementBera 11/21/2017 16:57'!genDispatchB	^ String streamContents: [:s |		s << '	<generated>'.		s cr.		self genSelectors pairsDo: [ :opName :index |		s << '	prim = '.		index printOn: s.		s << ' ifTrue: [^ #'.		s << opName.		s << ' ].'.		s cr ]]! !!SistaV1Doc methodsFor: 'accessing' stamp: 'ClementBera 11/21/2017 14:55'!genDispatch	^ String streamContents: [:s |		s << '	<generated>'.		s cr.		self genSelectors pairsDo: [ :opName :index |		s << '	prim = '.		index printOn: s.		s << ' ifTrue: [^ self '.		opName keywords withIndexDo: [ :kw :i |			kw last = $:				ifTrue: [					i = 1 						ifTrue: [  s << kw allButLast ]						ifFalse: [  s << kw capitalized allButLast ] ]				ifFalse: [ s << kw ]			 ]	.		s << ' ].'.		s cr ]]! !